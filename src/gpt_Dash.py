#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Mar 26 16:38:54 2019

@author: wanxinye
"""

import dash
import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Input, Output, State
#pip install dash-dangerously-set-inner-html
import plotly.graph_objs as go
import plotly
import pandas as pd
import numpy as np
#pip install dash-table-experiments
import dash_table_experiments as dt
import time
import pickle 
import gpt_2_simple as gpt2


#vec = open("Tfidf_LogR.pickle", 'rb') # rb= read in bytes
#grid3 = pickle.load(vec)
#vec.close()





app = dash.Dash(__name__)

app.layout = html.Div(style = {'backgroundColor': '#191919', 'height': 1000},children = [
                
                html.Div([
                        html.Img(id ='logo', src ='https://i.ibb.co/z8qmk6C/pngguru-com.png', height='300', width='300')]),
        
                html.Div([
                        
                        #html.Img(id = 'logo', src = 'https://developer.spotify.com/assets/branding-guidelines/logo@2x.png', height='80',  width= '100'),
                       
                        #html.Img(id = 'logo', src = 'https://i.ibb.co/z8qmk6C/pngguru-com.png', height='500',  width= '500'),
                       
                        html.H1('Reviews generation based on GPT2 by Gradient Descenders',style={'color': '#FFFFFF'},
                                className='gs-header gs-text-header padded'),
                        
                        html.H4('Enter the keywords and ratings, our model will give you the result', style={'color': '#FFFFFF'},className='six columns' ),
                        dcc.Input(
                                id='keywords_input',
                                value='pants',type='text',
#                                children=html.Div([
#                                    'Input a song name'
#                               ]),
                                style={
                                    'width': '30%',
                                    'height': '50px',
                                    'lineHeight': '50px',
                                    'borderWidth': '2px',
                                    'borderStyle': 'dashed',
                                    'borderRadius': '8px',
                                    'textAlign': 'center',
                                    'margin': '12px',
                                    'color':'#990000',
                                    'fontSize':26
                                },
                                # Allow multiple files to be uploaded
                              ),
                        dcc.Input(
                                id='ratings_input',
                                value='2', type='number',
                                style={
                                    'width': '30%',
                                    'height': '50px',
                                    'lineHeight': '50x',
                                    'borderWidth': '2px',
                                    'borderStyle': 'dashed',
                                    'borderRadius': '8px',
                                    'textAlign': 'center',
                                    'margin': '12px',
                                    'color':'#990000',
                                    'fontSize':26
                                },
                                        ),
                        
                         
                          ]),
                html.Button(id='button',n_clicks=0,children='Submit', style={'width': '8%', 'fontSize': 20}),
                html.Div(id='output-container-button',
                         children='Enter both the keywords and ratings and press submit',style={'color': '#FFFFFF'},
                         className="six columns"),
                html.Div([
                         html.Br(),
                         html.Br(),
                         html.P(children = 'Here is the reviews generated by the model', style = {'color':'#FFFFFF','fontSize':26}),
                         html.Div(id='output',
                                  children=[html.Div(dt.DataTable(rows=[{}]), style={'display': 'visible'})],
                                  style={'color': '#990000','font-weight':'bold','fontSize': 40}),   
                                  html.Br(),
                              ], className='seven columns')
                                                        

                ], className = 'row') 




def text_generation(keyword, rating):
    output=[]
    sess = gpt2.start_tf_sess()
    gpt2.load_gpt2(sess)

    output.append(gpt2.generate(sess,
              temperature=0.6,
              top_p=40,
              nsamples=5,
              batch_size=1,
              length=200,
              prefix="<|startoftext|>~`{}~^{}~@".format(rating, keyword),
              truncate="<|endoftext|>",
              include_prefix=False,
              sample_delim='\n'
              ))
    return output


        

@app.callback(Output('output','children'),
              [Input('button', 'n_clicks')],
              [State('keywords_input', 'value'),
               State('ratings_input','value')]
               )
def output(n_clicks, keyword,rating):
    result= [text_generation(keyword, rating)]
    
    children = result
    #print (result)
    
    
    print(children)

    return children
            
if __name__ == '__main__':
	app.run_server(debug=True)
